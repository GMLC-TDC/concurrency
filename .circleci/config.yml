version: 2
aliases:

  - &run_concurrency
    name: run_concurrency
    environment:
    command: |
      mkdir -p build
      cd build
      eval cmake .. ${CMAKE_FLAGS}
      make -j 4
      ctest --output-on-failure

jobs:

  concurrencyTSan:
    docker:
      - image: helics/buildenv:builder
    environment:
      CMAKE_FLAGS: '-DCMAKE_CXX_FLAGS="-fsanitize=thread -g -O1 "'
      TSAN_OPTIONS: 'second_deadlock_stack=1'

    steps:
      - checkout
      - run: *run_concurrency

  concurrencyASan:
    docker:
      - image: helics/buildenv:sanitizers
    environment:
      CMAKE_FLAGS: '-DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_FLAGS="-fsanitize=undefined,address -fsanitize-address-use-after-scope -stdlib=libc++ -L/root/develop/libcxx_asan/lib -lc++abi -I/root/develop/libcxx_asan/include -I/root/develop/libcxx_asan/include/c++/v1 -Wno-unused-command-line-argument -fno-omit-frame-pointer -g -O1 -Wl,-rpath=/root/develop/libcxx_asan/lib -fsanitize-blacklist=/root/project/.circleci/asan_blacklist.txt"  '
      LSAN_OPTIONS: 'suppressions=/root/project/.circleci/leak_suppression.txt'
      UBSAN_OPTIONS: 'print_stacktrace=1'

    steps:
      - checkout
      - run: *run_concurrency

  concurrencyMSan:
    docker:
      - image: helics/buildenv:sanitizers
    environment:
      CMAKE_FLAGS: '-DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_FLAGS="-fsanitize=memory -stdlib=libc++ -L/root/develop/libcxx_msan/lib -lc++abi -I/root/develop/libcxx_msan/include -I/root/develop/libcxx_msan/include/c++/v1 -Wno-unused-command-line-argument -fno-omit-frame-pointer -g -O1 -Wl,-rpath=/root/develop/libcxx_msan/lib" '

    steps:
      - checkout
      - run: *run_concurrency

workflows:
  version: 2
  concurrency_test:
    jobs:
      - concurrencyMSan
      - concurrencyASan
      - concurrencyTSan


